<UserControl x:Class="Backupper.SrcBackupBaseHeader"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Backupper"
             xmlns:mainCtrl="clr-namespace:Main.Controls;assembly=MainDll"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:mainBinds="clr-namespace:Main.Binds;assembly=MainDll"
             xmlns:mainValidations="clr-namespace:Main.Validations;assembly=MainDll"
             mc:Ignorable="d" 
             MinWidth="120">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../AppResource.xaml" />
                <ResourceDictionary Source="../BackupResource.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <!--<UserControl.Style>
        <Style BasedOn="{StaticResource stlBackup}" TargetType="UserControl" />
    </UserControl.Style>-->

    <Grid x:Name="grdMain">
        <mainCtrl:StackPanelM x:Name="stpMain" Orientation="Vertical">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="clmEnabledDisabled" />
                    <ColumnDefinition x:Name="clmDelete" Width="auto" />
                </Grid.ColumnDefinitions>

                <mainCtrl:ToggleButton x:Name="bttEnabled" TextOn="On" TextOff="Off" IsChecked="{Binding Backup.IsEnabled, Mode=TwoWay}" AddStyle="{StaticResource stlDisableWhenNotIdle}">
                    <mainCtrl:ToggleButton.Style>
                        <Style TargetType="mainCtrl:ToggleButton" >
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Backup.State}" Value="{x:Static local:BackupStates.Idle}">
                                    <Setter Property="IsEnabled" Value="True" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </mainCtrl:ToggleButton.Style>
                </mainCtrl:ToggleButton>

                <mainCtrl:ButtonM x:Name="btnDelete" Grid.Column="1" Content="&#xE74D;" FontSize="13" FontFamily="Segoe MDL2 Assets" Padding="2" 
                    AddStyle="{StaticResource stlDisableWhenNotIdle}" MouseOverBackground="Transparent" BorderThickness="0" Click="BtnDelete_Click" >
                    <mainCtrl:ButtonM.Style>
                        <Style TargetType="mainCtrl:ButtonM" >
                            <Setter Property="Foreground" Value="{StaticResource clrDefaultGray}"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="Red" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </mainCtrl:ButtonM.Style>
                </mainCtrl:ButtonM>
            </Grid>

            <mainCtrl:TextBlockM x:Name="txbNameTitle" Text="Name:" Style="{StaticResource stlTxbTitle}"  />

            <!--Style="{StaticResource stlDtgCllTxtEditing}"   -->
            <!--Used instead ContentPresenter because          -->
            <!--AddStyle="{StaticResource stlDtgCllTxtEditing}"-->
            <!---->
            <mainCtrl:TextBoxM x:Name="txtNameValue" MouseDoubleClick="TxtNameValue_MouseDoubleClick" KeyDown="TxtNameValue_KeyDown" 
                               AddStyle="{StaticResource stlTxtErrorTemplate}" AddStyle2="{StaticResource stlDisableWhenNotIdle}" ToolTip="Press enter to save"
                               Text="{Binding Path=Backup.Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnExceptions='True'}" LostFocus="TxtNameValue_LostFocus">

                <mainCtrl:TextBoxM.Style>
                    <Style TargetType="mainCtrl:TextBoxM" BasedOn="{StaticResource stlTxtValue}" >
                        <Setter Property="Background" Value="Transparent" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsViewInEdit}" Value="False">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="mainCtrl:TextBoxM">
                                            <Grid Background="{TemplateBinding Background}" >
                                                <!-- I need a grid to fill the button dimension and then TextBlock set it position with Horizontal/vertical ContentAlignment, otherwise doesn't work-->
            <Label x:Name="lblNameValue" Padding="3,1,0,0" Margin="0,0,0,1" Content="{TemplateBinding Text}" ToolTip="Double click to edit"  />
    </Grid>
    </ControlTemplate>
    </Setter.Value>
    </Setter>
    </DataTrigger>
    </Style.Triggers>
    </Style>
    </mainCtrl:TextBoxM.Style>
    </mainCtrl:TextBoxM>


    <Grid HorizontalAlignment="Stretch">
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition  />
        </Grid.RowDefinitions>
        <mainCtrl:TextBlockM x:Name="txbStateTitle" Text="State:" Style="{StaticResource stlTxbTitle}" />

        <mainCtrl:TextBlockM x:Name="txbStateValue" Grid.Row="1" Text="{Binding Backup.State}" Style="{StaticResource stlTxbValue}" />
        <!--Foreground="#7DE07D" -->
        <mainCtrl:ButtonM x:Name="btnStartStop" Height="20" Grid.RowSpan="2" Grid.Column="1" Margin="0,7,0,0" FontSize="25" BorderThickness="0" 
                                  FontFamily="Segoe MDL2 Assets" IsEnabled="{Binding Backup.IsEnabled}" DisabledForegroundColor="LightGray" Click="BtnStartStop_Click">
            <mainCtrl:ButtonM.Style>
                <Style TargetType="mainCtrl:ButtonM" >
                    <Setter Property="Template" Value="{StaticResource cttStopSymbol}" />
                    <Setter Property="Foreground" Value="{StaticResource clrDefaultGray}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Backup.State}" Value="{x:Static local:BackupStates.Idle}">
                            <Setter Property="Template" Value="{StaticResource cttStartSymbol}" />
                        </DataTrigger>
                        <!--<DataTrigger Binding="{Binding Backup.IsInWaitToStop}" Value="True">-->
                        <DataTrigger Binding="{Binding Backup.State}" Value="{x:Static local:BackupStates.WaitToStop}">
                            <Setter Property="Template" Value="{StaticResource cttProgressRing}" />
                        </DataTrigger>
                        <Trigger  Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Red" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Backup.State}" Value="{x:Static local:BackupStates.Idle}"/>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource clrHighLightsItem}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <!--<Condition Binding="{Binding Backup.IsInWaitToStop}" Value="True"/>-->
                                <Condition Binding="{Binding Backup.State}" Value="{x:Static local:BackupStates.WaitToStop}" />
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource clrDefaultGray}" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </mainCtrl:ButtonM.Style>
        </mainCtrl:ButtonM>

    </Grid>
    <!--DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}"-->
    <mainCtrl:ProgressBarRing x:Name="prgRngComprPerc" Colore0Perc="#FF841F" Colore100Perc="#00C221" Width="80" HorizontalAlignment="Center" Padding="0,8,0,0" 
                              Value="{Binding Backup.Progress.Percentage, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}" >
        <mainCtrl:ProgressBarRing.Style>
            <Style TargetType="mainCtrl:ProgressBarRing">
                <Setter Property="Opacity" Value="0"/>
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleY="0"/>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Backup.State}" Value="{x:Static local:BackupStates.Idle}">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard Storyboard="{StaticResource stbSoftCloseInVertical}"/>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <BeginStoryboard Storyboard="{StaticResource stbSoftOpenInVertical}" />
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </mainCtrl:ProgressBarRing.Style>
    </mainCtrl:ProgressBarRing>
    </mainCtrl:StackPanelM>
    </Grid>
</UserControl>
