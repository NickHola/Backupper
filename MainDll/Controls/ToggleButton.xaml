<UserControl x:Class="Main.Controls.ToggleButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Main.Controls"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="50" d:DesignWidth="200" Foreground="#515151"
             x:Name="uscMain" MouseLeftButtonUp="ToggleButton_MouseLeftButtonUp">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../UIRes.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <sys:Double x:Key="dimensioniStelo">75</sys:Double>
        </ResourceDictionary>
    </UserControl.Resources>

    <UserControl.ContentTemplate>
        <DataTemplate>
            <Grid x:Name="grdMain" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="grdMainCln0" Width="22"/>
                    <ColumnDefinition x:Name="grdMainCln1" Width="auto"/>
                </Grid.ColumnDefinitions>
                <!--I controlli sono dentro un Viewbox, quindi tutti i Width e Height danno solamente la proporzione e non l'effettiva grandezza in pixel...
                        ...del controllo, che invece si adatta alla dimensioni del controllo che userà questo stile-->
                <Viewbox x:Name="vwbToggle" Stretch="Uniform" Width="20" Height="15" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Grid x:Name="grdToggle" Width="190" Height="120" Margin="0,16,0,0">
                        <Ellipse x:Name="llpSinistra" Width="{StaticResource dimensioniStelo}" Height="{StaticResource dimensioniStelo}" Margin="-84,-4,0,0" StrokeThickness="2" 
                                             Fill="{Binding ColoreStelo, ElementName=uscMain}" Stroke="{Binding ColoreBordo, ElementName=uscMain}" />

                        <Ellipse x:Name="llpDestra" Width="{StaticResource dimensioniStelo}" Height="{StaticResource dimensioniStelo}" Margin="84,-4,0,0" StrokeThickness="2" 
                                             Fill="{Binding ColoreStelo, ElementName=uscMain}" Stroke="{Binding ColoreBordo, ElementName=uscMain}" />
                        <!--Ho usato questi 3 elementi al posto del Border commentato sotto poichè c'è una sbavatura grafica nello stelo che renderizza-->
                        <Grid Width="85" Height="{StaticResource dimensioniStelo}" Margin="0,-4,0,0">
                            <Border VerticalAlignment="Top" Height="2" Background="{Binding ColoreBordo, ElementName=uscMain}" Panel.ZIndex="1" />
                            <Border Background="{Binding ColoreStelo, ElementName=uscMain}" Panel.ZIndex="0" />
                            <Border VerticalAlignment="Bottom" Height="2" Background="{Binding ColoreBordo, ElementName=uscMain}" Panel.ZIndex="1"/>
                        </Grid>

                        <Border x:Name="borderMiddlePart" Width="85" Height="{StaticResource dimensioniStelo}" Margin="0,-4,0,0" BorderThickness="0,2,0,2" Background="{Binding Background}" BorderBrush="{Binding BorderBrush}" />
                        <Ellipse x:Name="llpToggle" Width="100" Height="100" Margin="-75,3,0,10" StrokeThickness="1.5" 
                                             Fill="{Binding ColoreToggle, ElementName=uscMain}" Stroke="{Binding ColoreBordo, ElementName=uscMain}">
                            <Ellipse.RenderTransform>
                                <TranslateTransform X="0" Y="0" />
                            </Ellipse.RenderTransform>
                            <Ellipse.BitmapEffect>
                                <DropShadowBitmapEffect Softness="0.7" ShadowDepth="5" Direction="270" Color="#BBBBBB"/>
                            </Ellipse.BitmapEffect>
                        </Ellipse>
                    </Grid>
                </Viewbox>
                <!--Ho usato Text="{Binding Text...} poichè TemplateBinding con le custom DependenciesProperty non funziona"-->
                <TextBlock x:Name="txbMain" Grid.Column="1" VerticalAlignment="Center" Margin="2,0,0,0" FontSize="{Binding FontSize, ElementName=uscMain}" 
                                   FontFamily="{Binding FontFamily, ElementName=uscMain}" TextWrapping="Wrap" Foreground="{Binding Foreground, ElementName=uscMain}" >
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Text" Value="{Binding TextOff, ElementName=uscMain}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=uscMain}" Value="True">
                                    <Setter Property="Text" Value="{Binding TextOn, ElementName=uscMain}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
            <DataTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
                <!--Stranamente con <UserControl.Template><ControlTemplate> il DataTrigger restituisce l'errore che non riesce a recuperare la proprietà PrimaTesto
                ma se si aggiunge per esempio il setter <Setter Property="Opacity" Value="0.5" /> all'inizio della lista allora non da nessun errore e funziona-->
                <DataTrigger Binding="{Binding PrimaTesto, ElementName=uscMain}" Value="True" >
                    <Setter TargetName="txbMain" Property="Grid.Column" Value="0" />
                    <Setter TargetName="txbMain" Property="Margin" Value="0,0,5,0" />
                    <Setter TargetName="vwbToggle" Property="Grid.Column" Value="1" />
                    <Setter TargetName="grdMainCln0" Property="Width" Value="auto" />
                    <Setter TargetName="grdMainCln1" Property="Width" Value="24" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsChecked, ElementName=uscMain}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="llpToggle">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.35" Value="75" KeySpline="{StaticResource KeySplineMain}"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="llpToggle">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.45" Value="0" KeySpline="{StaticResource KeySplineMain}"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </UserControl.ContentTemplate>
</UserControl>
